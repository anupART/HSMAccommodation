// / thereare two code noiw us ete booking of page and return from belowe and non editibale of prvieous logc from aboive
// // work on anoter issue 
// import 'package:flutter/material.dart';
// import 'package:flutter_calendar_week/flutter_calendar_week.dart';
// import 'package:google_fonts/google_fonts.dart';
// import 'package:intl/intl.dart';
// import 'dart:math';

// void main() {
//   runApp(MaterialApp(home: HSMAccommodation()));
// }

// class HSMAccommodation extends StatefulWidget {
//   @override
//   _CalendarBedBookingState createState() => _CalendarBedBookingState();
// }

// class _CalendarBedBookingState extends State<HSMAccommodation> {
//   final CalendarWeekController _calendarController = CalendarWeekController();
//   late DateTime selectedDate;
//   Map<DateTime, List<BedState>> bedStatusByDate = {};
//   int? selectedBedIndex;

//   @override
//   void initState() {
//     super.initState();
//     selectedDate = DateTime.now();
//     _initializeBedStatus();
//   }

//   void _initializeBedStatus() {
//     for (int i = 0; i < 30; i++) {
//       DateTime date = DateTime.now().add(Duration(days: i));
//       if (!bedStatusByDate.containsKey(date)) {
//         bedStatusByDate[date] = List.generate(18,
//             (index) => Random().nextBool() ? BedState.vacant : BedState.booked);
//       }
//     }
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       backgroundColor: Colors.white,
//       appBar: AppBar(
//         backgroundColor: Colors.white,
//         title: Text(
//           'HSM Accommodation',
//           style: GoogleFonts.roboto(
//             fontSize: 20,
//             fontWeight: FontWeight.bold,
//           ),
//         ),
//         actions: [
//           TextButton(
//             onPressed: () => Navigator.pop(context),
//             child: Padding(
//               padding: const EdgeInsets.only(right: 20, top: 20, bottom: 8),
//               child: Container(
//                 width: 30,
//                 height: 30,
//                 decoration: const BoxDecoration(
//                   color: Colors.orange,
//                   shape: BoxShape.circle,
//                 ),
//                 child: const Icon(
//                   Icons.person,
//                   size: 23,
//                   color: Colors.white,
//                 ),
//               ),
//             ),
//           ),
//         ],
//       ),
//       body: Column(
//         children: [
//           _buildCalendar(),
//           Expanded(child: _buildBedLayout()),
//         ],
//       ),
//     );
//   }

//   Widget _buildCalendar() {
//     return Container(
//       height: MediaQuery.of(context).size.height / 6,
//       decoration: BoxDecoration(
//         color: Colors.white,
//         boxShadow: [
//           BoxShadow(
//             color: Colors.grey.withOpacity(0.5),
//             spreadRadius: 1,
//             blurRadius: 5,
//           ),
//         ],
//       ),
//       child: CalendarWeek(
//         controller: _calendarController,
//         height: 100,
//         showMonth: true,
//         minDate:
//             DateTime.now().subtract(Duration(days: 30)), // Show past 30 days
//         maxDate: DateTime.now().add(Duration(days: 120)), // 4 months limit
//         onDatePressed: (DateTime datetime) {
//           setState(() {
//             selectedDate = datetime;
//           });
//         },
//         dayOfWeekStyle: const TextStyle(color: Colors.grey),
//         dateStyle: const TextStyle(color: Colors.black),
//         todayDateStyle: const TextStyle(
//           color: Colors.orange,
//           fontWeight: FontWeight.bold,
//         ),
//       ),
//     );
//   }

//   Widget _buildBedLayout() {
//     List<BedState> bedStatus = bedStatusByDate[selectedDate] ??
//         List.generate(18, (index) => BedState.vacant);

//     return Column(
//       children: [
//         Expanded(
//           child: GridView.builder(
//             padding: const EdgeInsets.all(16),
//             gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
//               crossAxisCount: 4,
//               childAspectRatio: 2,
//               crossAxisSpacing: 15,
//               mainAxisSpacing: 15,
//             ),
//             itemCount: 18,
//             itemBuilder: (context, index) {
//               return GestureDetector(
//                 onTap: () {
//                   if (bedStatus[index] == BedState.vacant) {
//                     _showBookingDialog(index);
//                   } else {
//                     _showDialog(index);
//                   }
//                 },
//                 child: Container(
//                   decoration: BoxDecoration(
//                     color: _getBedColor(bedStatus[index]),
//                     border: Border.all(color: Colors.black),
//                     borderRadius: BorderRadius.circular(8),
//                   ),
//                   child: Center(
//                     child: Text(
//                       'Bed ${index + 1}',
//                       style: const TextStyle(color: Colors.white),
//                     ),
//                   ),
//                 ),
//               );
//             },
//           ),
//         ),
//         Padding(
//           padding: const EdgeInsets.all(16.0),
//           child: Text(
//             'Selected Date: ${DateFormat('yyyy-MM-dd').format(selectedDate)}',
//             style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
//           ),
//         ),
//         _buildLegend(),
//       ],
//     );
//   }

//   void _showBookingDialog(int index) {
//     showDialog(
//       context: context,
//       builder: (BuildContext context) {
//         return AlertDialog(
//           title: Text('Book Bed ${index + 1}'),
//           content: Text('Do you want to book this bed?'),
//           actions: [
//             TextButton(
//               onPressed: () {
//                 // Book the bed
//                 setState(() {
//                   bedStatusByDate[selectedDate]![index] = BedState.booked;
//                 });
//                 Navigator.of(context).pop();
//                 Navigator.push(
//                   context,
//                   MaterialPageRoute(
//                     builder: (context) => AddEmployeeScreen(
//                       onBook: () {
//                         // This function updates the bed status to booked
//                         setState(() {
//                           bedStatusByDate[selectedDate]![index] = BedState
//                               .booked; // Ensure the bed is marked as booked
//                         });
//                       },
//                     ),
//                   ),
//                 );
//               },
//               child: Text('Book'),
//             ),
//             TextButton(
//               onPressed: () {
//                 Navigator.of(context).pop();
//               },
//               child: Text('Cancel'),
//             ),
//           ],
//         );
//       },
//     );
//   }

//   void _showDialog(int index) {
//     showDialog(
//       context: context,
//       builder: (BuildContext context) {
//         return AlertDialog(
//           title: Text('Bed ${index + 1}'),
//           content: Text('Do you want to see details or vacate the bed?'),
//           actions: [
//             TextButton(
//               onPressed: () {
//                 Navigator.of(context).pop();
//                 Navigator.push(
//                   context,
//                   MaterialPageRoute(
//                     builder: (context) => AddEmployeeScreen(
//                       onBook: () {
//                         // This function updates the bed status to booked
//                         setState(() {
//                           bedStatusByDate[selectedDate]![index] =
//                               BedState.booked;
//                         });
//                         Navigator.pop(
//                             context); // Go back to the HSMAccommodation screen
//                       },
//                     ),
//                   ),
//                 );
//               },
//               child: Text('Details'),
//             ),
//             TextButton(
//               onPressed: () {
//                 setState(() {
//                   bedStatusByDate[selectedDate]?[index] =
//                       BedState.vacant; // Change to vacant
//                 });
//                 Navigator.of(context).pop();
//               },
//               child: Text('Vacate'),
//             ),
//           ],
//         );
//       },
//     );
//   }

//   Color _getBedColor(BedState state) {
//     switch (state) {
//       case BedState.vacant:
//         return Colors.grey;
//       case BedState.booked:
//         return Colors.orange;
//       case BedState.unavailable:
//         return Colors.red;
//       default:
//         return Colors.grey;
//     }
//   }

//   Widget _buildLegend() {
//     return Padding(
//       padding: const EdgeInsets.all(16.0),
//       child: Row(
//         mainAxisAlignment: MainAxisAlignment.spaceEvenly,
//         children: [
//           _legendItem(Colors.grey, 'Vacant'),
//           _legendItem(Colors.orange, 'Booked'),
//           _legendItem(Colors.red, 'Unavailable'),
//         ],
//       ),
//     );
//   }

//   Widget _legendItem(Color color, String label) {
//     return Row(
//       children: [
//         Container(
//           width: 24,
//           height: 24,
//           decoration: BoxDecoration(
//             color: color,
//             border: Border.all(color: Colors.black),
//             borderRadius: BorderRadius.circular(4),
//           ),
//         ),
//         const SizedBox(width: 4),
//         Text(label),
//       ],
//     );
//   }
// }

// enum BedState { vacant, booked, unavailable }

// class AddEmployeeScreen extends StatelessWidget {
//   final VoidCallback onBook;

//   AddEmployeeScreen({required this.onBook});

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(title: Text('Add Employee')),
//       body: Center(
//         child: ElevatedButton(
//           onPressed: () {
//             onBook();
//             Navigator.pop(context); // Go back to HSMAccommodation
//           },
//           child: Text('Confirm Booking'),
//         ),
//       ),
//     );
//   }
// }
// // there are three issues
// // 1. like above working of booking good i want that the the dates from todays should be visble but not editibale ,
// // 2.   that when first time i visist page the i can see all vacant and booked dates but when i try to , come again at todays date aftre scrooling another dates i can not see any the data of book and vacant data gone , all grid/container/bed becomes vacant 
// // 3. the booking is not working on others date mneands aftre the todays dat till month 
// // solve all teree isuue and give me final code 